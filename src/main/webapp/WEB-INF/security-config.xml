<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.0.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://83.212.105.20:3306/rg" />
		<beans:property name="username" value="rg" />
		<beans:property name="password" value="alekos1111" />
	</beans:bean>

<beans:bean id="userDAO" class="gr.hua.springrest.dao.UserDAOImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<http security="none" pattern="/resource/**" />

	<http auto-config="true">
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/**/*"
			access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select name as username ,password, enabled from Users where name=?"
				authorities-by-username-query="SELECT name as username, authority as role
FROM Users, User_roles
WHERE name =  ?
AND Users.id = User_roles.user_id" />
		</authentication-provider>
	</authentication-manager>



</beans:beans>
